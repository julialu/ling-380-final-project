
21,August,2004


	 
      All awaited weekend has arrives after a hectific week at work ( Usually this is not very common for system / network admins :)) and  looks like in the mid of everything and work i found the girl i think is my type and hope things go the good way :).  Picking up a very light topic today but a very important one is to have all the servers in sync with a central server with aspect to time.  This generally helps a lot when comparing logs from different machines etc ....  A li'll theory behind NTP is that NTP is organised in a hierarchical client-server model. In the top of this hierarchy there are a small number of machines known as reference clocks. A reference clock is known as stratum 0 and is typically a cesium clock or a Global Positioning System (GPS) that receives time from satellites. Attached to these machines there are the so-called stratum 1 servers (that is, stratum 0 clients), which are the top level time servers available to the Internet, that is, they are the best NTP servers available.  With all this theoritical definitions now discuss what we as admins actually need to do is to syncronise a server on the n/w with a public NTP server and keep the other servers on the n/w in sync with the NTP server on our production network.  Basically NTP server and client are not two different deamons it is one and the same thing just depends on the configuration file   /etc/ntp.conf.        Before we start with the actual configuration a list of public NTP server's can be found at :  urlLink   http://www.eecis.udel.edu/~mills/ntp/servers.html     Majorly Listing the files used for NTP :   1.  /etc/ntp.conf   Whenever ntpd starts it checks its configuration file to determine syncronization sources, authentication options, monitoring options, access control and other operating options.   2.  /etc/ntp/drift   It is called as the frequency file that contains the latest estimate of clock frequency error   3.  /etc/ntp/keys   If specified, it will also look for this file containing the authentication keys .  Taking a look at the sample /etc/ntp.conf :  # Server to sync the clock from server 134.214.100.6 ] server publicntpserver.com #Peers are servers on the same network which also as ntp servers.  peer 192.168.100.125 peer 192.168.100.126 peer 192.168.100.127  # Location of the drift File driftfile /etc/ntp/drift  #Does the server require authentication (A better method is to block the other public servers from synchronising is using the restrict option shown below.)  authenticate no  #This is used in case authentication method is used. #keys /etc/ntp/keys #trustedkey 65535 #requestkey 65535 #controlkey 65535  # This is a better way to restrict servers by allowing only certain IP subnets. # by default ignore all ntp packets restrict 0.0.0.0 mask 0.0.0.0 ignore # allow localhost restrict 127.0.0.1 mask 255.255.255.255 # accept packets from... (Only the servers on the subnet below will be allowed to sync time including localhost :) restrict 192.168.100.125 mask 255.255.255.255 restrict 192.168.100.126 mask 255.255.255.255 restrict 192.168.100.127 mask 255.255.255.255  A sample file on the NTP client would simply be :  #more /etc/ntp.conf  driftfile /etc/ntp/ntp.drift pidfile /var/run/ntpd.pid server ntp1.mydomain.com server ntp2.mydomain.com  restrict default ignore restrict 127.0.0.1 restrict    That all should get you up and running in the NTP side and listing some good utils with the NTP server.  ntp-genkeys 

17,August,2004


	 
      Hi Folks ,  The best way manage logins for cisco router / switches is using the tacacs server.  Provides central authentication / privilidge levels etc....  But one big problem u face is that when the connectivity to tacacs goes down the router falls back to the default authentication procedure. Many a times you forget the default enable passwords and you are in a fix if the connectivity goes down ....  thats what happened with me :( .  Btw if you wanna know how to get your cisco routers on tacacs please go to :   urlLink http://www.cisco.com/warp/public/480/tacplus.shtml#intro   But the important part is how to break the current password :   Step 1 :  Attach a terminal or PC with terminal emulation to the console port of the router. Use the following terminal settings ( Generally Hyper terminal is used ) : 9600 baud rate No parity 8 data bits 1 stop bit No flow control   Step 2 :  Type   show version   and record the setting of the configuration register. Click here to see output of ashow version command. The configuration register setting is usually 0x2102 or 0x102.   Step 3 :  Reboot the cisco router   Step 4:  Press Break (ctrl + break) on the terminal keyboard within 60 seconds of the powerup to put the router into ROMMON.  Type  confreg    0x2142   at the  rommon 1

15,August,2004


	 
      Hello to all on a lazy sunday evening ...  Jai Hind to my fellow Indian's. Happy Independence Day to all.  Coming back to work ....  The stuff sysad's don't like generally is installation of large sets of machines (say 30 to 40) or mebbe 10 in a days (or say a week's time). Some of the solutions normally used would be :   Disk Cloning  The most primitive, and perhaps oldest, technique is to create a prototype system by hand and then backup a copy of that system to be replicated on other systems. A lot of computer vendors do this to create their pre-installed systems. In many cases, the cloning is done by bulk copying the hard disk. Dump/restore or dd are useful for this. After the system is cloned, you will usually need to give it some configuration (IP address, hostname, etc.), but you may be able to automate this with BOOTP or DHCP (  Thats the tedious part of it cause servers in a production environment generally have a static IP address  ).   JumpStart (Sun Solaris)/KickStart (Redhat Linux)  (Thats what i generally do) :  The solution was initially introduced by Sun in its OS Solaris and later implemeted by Redhat.  Well will put down some steps for the Sun System's:   Before you start make sure that :   1. The install server or boot server is in the same local network segment as client with network link up . 2. NFS, tftp, reverse address lookup daemon ,in.rarpd services are running On jumpstart server  Preparing for a jumpstart server      Install Solaris 2.x make directory to store install server data.      mkdir /export/install  share it   vi /etc/dfs/dfstab    add share -F nfs -o ro,anon=0 /export/install to export file system for sharing.   Do a  shareall  so that the file system is now exported   Setting up an Install server  Mount Solaris 2.x cdrom Follow the steps :   cd /cdrom/cdrom0/s0/Solaris_2.7/Tools ./setup_install_server /export/install   This will copy the cdrom contents in to the /export/install directory     cp â€“r /cdrom/cdrom0/s0/Solaris_2.7/Misc/* /jumpstart      Edit the sample rules file as per your requirement     vi /jumpstart/rules   Keywords their value and usage is described in rules file itself. any minus sign (-) in rule value always matches for that keyword.  RULE_KEYWORD RULE_VALUE DESCRIPTIONS domainname text system's domain name disksize text range system's disk size disk device name text disk size (MBytes range) hostname text system's host name  etc all depending on your requirements  Dunn forget to add default profile  The following rule set matches any machine and redirect the install request to a profile file called any_machine.   any - - any_machine -   Verifying rules   ./check  Validating rules... Validating profile any_machine... rules ok.   vi any_machine  install_type initial_install system_type server partitioning explicit filesys c0t0d0s0 500 / filesys c0t0d0s1 1000 swap filesys c0t0d0s3 1000 /usr filesys c0t0d0s4 1000 /var filesys c0t0d0s5 1000 /opt cluster SUNWCall add   vi sysidcfg   system_locale=en_US install_locale=en_US timeserver=ntpserver1.com (put the name of your NTP server here) timezone=Asia / Calcutta network_interface=hme0 {netmask=255.255.255.0} name_service=NONE  As you can see this file keeps all your system information like locale time zone etc and supply it to the client at the booting time.     Edit the file /etc/ethers to put in the client mac Id and hostname    vi /etc/ethers   8:00:50:44:88:12 Mercury  Finally adding a client to the boot image.   cd /export/install/Solaris_2.7/Tools   ./add_install_client -e 8:00:50:44:88:12 -s inst_server:/export/install -c inst_server:/jumpstart -p inst_server:/jumpstart Mercury sun4u    -e specify the ethernet address of client -s option specify the location of boot image -c option specify the jumpstart directory path. -p option specify the sysidcfg file location inst_server is your jumpstart server mercury is jumpstart client to be installed  Now go to the clients :   ok

14,August,2004


	 
      I am Nitin Batta from Mumbai, India.  I work on deploying / configuring large storage area networks , handling Cisco 7200 series routers and 3600 switches. Managing and deploying UNIX and Linux servers with different flavours.  I am goona put articles on how do i go about my job (troble shotting networks / closing security holes / handling network issues).  Last but not the least i am just 23 years  young  so friends (Only girls) are always welcome to drop in a line. 
     

    



